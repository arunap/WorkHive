name: workhive-mgt-system
services:
  mssql-server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql-server
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "yemFkUAgY@CB"
      ACCEPT_EULA: "Y"
    healthcheck:
      # test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S 127.0.0.1 -U SA -P yemFkUAgY@CB -Q 'SELECT 1'"]
      test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P yemFkUAgY@CB -C -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - mssql-data:/var/opt/mssql
    networks:
      - workhive-network

  workhive-frontend:
    container_name: workhive-frontend
    image: workhive-frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - workhive-api
    ports:
      - "3200:3000"
    environment:
      - NODE_ENV=production
    stdin_open: true
    tty: true
    networks:
      - workhive-network

  workhive-api:
    container_name: workhive-api
    image: workhive-api:latest
    build:
      context: .
      dockerfile: backend/WorkHive.Api/Dockerfile
    depends_on:
      mssql-server:
        condition: service_healthy
    ports:
      - "5200:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Database=Server=mssql-server,1433;Database=WorkHive;User Id=SA;Password=yemFkUAgY@CB;TrustServerCertificate=True;;
    networks:
      - workhive-network

volumes:
  mssql-data:

networks:
  workhive-network:
    driver: bridge
